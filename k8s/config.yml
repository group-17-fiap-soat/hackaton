apiVersion: apps/v1
kind: Deployment
metadata:
  name: keyframe-hackaton-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keyframe-hackaton-app
  template:
    metadata:
      labels:
        app: keyframe-hackaton-app
    spec:
      containers:
        - name: keyframe-hackaton
          image: 361598269712.dkr.ecr.us-east-1.amazonaws.com/keyframe-hackaton:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: hackaton-keyframe-config
                  key: DATABASE_HOST

            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  name: hackaton-keyframe-config
                  key: DATABASE

            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: hackaton-keyframe-config
                  key: DATABASE_PORT

            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: keyframe-hackaton-secret
                  key: DATABASE_USER

            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keyframe-hackaton-secret
                  key: DATABASE_PASSWORD

          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: keyframe-hackaton-service
spec:
  type: LoadBalancer
  selector:
    app: keyframe-hackaton-app
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keyframe-hackaton-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: fiap-soat-seventeen-keyframe-hackaton-service.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keyframe-hackaton-service
                port:
                  number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: keyframe-hackaton-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: keyframe-hackaton-app
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  template:
    metadata:
      labels:
        k8s-app: metrics-server
    spec:
      serviceAccountName: metrics-server
      volumes:
        - name: tmp-dir
          emptyDir: {}
      hostNetwork: true
      containers:
        - name: metrics-server
          image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7
          imagePullPolicy: IfNotPresent
          args:
            - /metrics-server
            - --cert-dir=/tmp
            - --secure-port=4443
            - --kubelet-preferred-address-types=InternalIP
            - --kubelet-use-node-status-port
            - --kubelet-insecure-tls
          ports:
            - name: main-port
              containerPort: 4443
              protocol: TCP
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
      nodeSelector:
        kubernetes.io/os: linux
